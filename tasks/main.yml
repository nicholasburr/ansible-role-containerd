---
- name: create /etc/modules-load.d/containerd.conf
  blockinfile:
    path: /etc/modules-load.d/containerd.conf
    create: true
    backup: true
    block: |
          overlay
          br_netfilter

- name: enable modprobe modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: configure sysctl
  sysctl:
    name: "{{ item }}"
    value: '1'
    state: present    
    reload: true
    sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-ip6tables

- name: install containerd prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

## Add Dockerâ€™s official GPG key
- name: install docker apt-key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: add Docker repository (not arm64)
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_architecture != 'aarch64'

- name: add Docker repository (arm64)
  apt_repository:
    repo: "deb [arch=arm64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_architecture == 'aarch64'

- name: install containerd
  apt:
    name: containerd.io
    state: present

- name: configure containerd service
  systemd:
    name: containerd
    state: started
    enabled: true

- name: create /etc/containerd
  file:
    path: /etc/containerd
    state: directory

- name: create containerd default config
  command: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  notify: restart_containerd

- meta: flush_handlers
